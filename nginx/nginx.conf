user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Optimization settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;

    # Buffer size settings
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    proxy_buffer_size 16k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;

    # Compression settings
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        text/css
        text/javascript
        text/plain;

    # Upstream for Node.js app with load balancing
    upstream node_app {
        least_conn;
        server server:4000;
        server server:4000;
        keepalive 32;
    }

    # Upstream for Keycloak
    upstream keycloak {
        server keycloak:8080;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name www.minecraftoffline.net;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server for Landing Page and Cube Game
    server {
        listen 443 ssl;
        server_name www.minecraftoffline.net;

        ssl_certificate /etc/ssl/bundle.crt;
        ssl_certificate_key /etc/ssl/minecraftoffline.net.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # SSL optimizations
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_buffer_size 4k;

        # Serve the Landing Page
        root /usr/share/nginx/landing;
        index index.html index.htm;

        # Landing page static files
        location / {
            try_files $uri $uri/ =404;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # Redirect /game (without trailing slash) to /game/ (with trailing slash)
        location = /game {
            return 301 /game/;
        }

        # Serve the Cube Game React App from /game/
        location /game/ {
            alias /usr/share/nginx/game/;
            try_files $uri $uri/ index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # Keycloak proxy
        location /auth/ {
            proxy_pass http://keycloak/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffer_size 16k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            chunked_transfer_encoding off;
            proxy_http_version 1.1;
            proxy_request_buffering off;
        }

        # API proxy for the Node.js app
        location /api/ {
            proxy_pass http://node_app/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
        }

        # Socket.io proxy for the Node.js app
        location /socket.io/ {
            proxy_pass http://node_app/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
        }
    }

    # Minecraft domain redirect
    server {
        listen 80;
        server_name minecraftoffline.net;
        return 301 https://www.minecraftoffline.net$request_uri;
    }
}
